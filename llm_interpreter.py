import json
import logging
import requests
import yaml
from typing import Dict

CONFIG_FILE = 'config.yaml'
logger = logging.getLogger(__name__)

SYSTEM_PROMPT = (
    'You are a planning assistant that converts user instructions into a JSON '
    'action plan. The plan must contain a "tasks" array describing each step.'
)


def load_config() -> Dict:
    with open(CONFIG_FILE, 'r') as f:
        return yaml.safe_load(f)


def call_llm(prompt: str) -> str:
    cfg = load_config()
    url = cfg.get('lmstudio_url', '').rstrip('/') + '/v1/chat/completions'
    token = cfg.get('lmstudio_token', '')
    headers = {'Content-Type': 'application/json'}
    if token:
        headers['Authorization'] = f'Bearer {token}'
    payload = {
        'model': 'local',
        'messages': [
            {'role': 'system', 'content': SYSTEM_PROMPT},
            {'role': 'user', 'content': prompt},
        ],
    }
    resp = requests.post(url, json=payload, headers=headers, timeout=60)
    resp.raise_for_status()
    data = resp.json()
    return data.get('choices', [{}])[0].get('message', {}).get('content', '')


def interpret(text: str) -> Dict:
    """Return task plan generated by the LLM or an empty dict on failure."""
    try:
        response = call_llm(text)
        plan = json.loads(response)
        return plan if isinstance(plan, dict) else {}
    except Exception as exc:
        logger.warning('LLM interpretation failed: %s', exc)
        return {}
